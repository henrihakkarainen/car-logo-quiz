[{"/usr/src/app/src/index.js":"1","/usr/src/app/src/reportWebVitals.js":"2","/usr/src/app/src/App.js":"3","/usr/src/app/src/components/LanguageSelection.js":"4","/usr/src/app/src/i18n.js":"5","/usr/src/app/src/components/Home.js":"6","/usr/src/app/src/components/Games.js":"7","/usr/src/app/src/components/Category.js":"8","/usr/src/app/src/components/Navigation.js":"9","/usr/src/app/src/components/LoginForm.js":"10","/usr/src/app/src/components/ModalForm.js":"11","/usr/src/app/src/components/RegisterForm.js":"12","/usr/src/app/src/components/Play.js":"13","/usr/src/app/src/components/Game.js":"14","/usr/src/app/src/components/ProgressBar.js":"15","/usr/src/app/src/components/Recap.js":"16","/usr/src/app/src/components/NotFound.js":"17","/usr/src/app/src/config/axiosConfig.js":"18","/usr/src/app/src/config/routeConfig.js":"19"},{"size":634,"mtime":1614261466934,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1611927386097,"results":"22","hashOfConfig":"21"},{"size":1573,"mtime":1614261344234,"results":"23","hashOfConfig":"21"},{"size":940,"mtime":1614262622373,"results":"24","hashOfConfig":"21"},{"size":668,"mtime":1612374102675,"results":"25","hashOfConfig":"21"},{"size":270,"mtime":1613398217188,"results":"26","hashOfConfig":"21"},{"size":1143,"mtime":1614260059492,"results":"27","hashOfConfig":"21"},{"size":1098,"mtime":1614258919462,"results":"28","hashOfConfig":"21"},{"size":2722,"mtime":1613320528431,"results":"29","hashOfConfig":"21"},{"size":3291,"mtime":1613562795416,"results":"30","hashOfConfig":"21"},{"size":1663,"mtime":1613473176662,"results":"31","hashOfConfig":"21"},{"size":7019,"mtime":1613471849388,"results":"32","hashOfConfig":"21"},{"size":1735,"mtime":1614339917648,"results":"33","hashOfConfig":"21"},{"size":11151,"mtime":1614258817330,"results":"34","hashOfConfig":"21"},{"size":604,"mtime":1614091149680,"results":"35","hashOfConfig":"21"},{"size":3959,"mtime":1614092904853,"results":"36","hashOfConfig":"21"},{"size":111,"mtime":1614259877469,"results":"37","hashOfConfig":"21"},{"size":172,"mtime":1614260019226,"results":"38","hashOfConfig":"21"},{"size":451,"mtime":1614261203630,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1twsez5",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/usr/src/app/src/index.js",[],["86","87"],"/usr/src/app/src/reportWebVitals.js",[],"/usr/src/app/src/App.js",["88"],"import { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport Container from 'react-bootstrap/Container';\n\nimport LanguageSelection from './components/LanguageSelection';\nimport Navigation from './components/Navigation';\nimport Modal from './components/ModalForm';\n\nimport routes from './config/routeConfig';\n\nimport './App.css';\n// import 'react-responsive-modal/styles.css';\n\nconst App = () => {\n  const [ language, setLanguage ] = useState(localStorage.getItem('language'));\n  const [ showLogin, setShowLogin ] = useState(false);\n  const [ t, i18n ] = useTranslation();\n\n  const onChangeLanguage = (lang) => {\n    localStorage.setItem('language', lang);\n    i18n.changeLanguage(lang);\n    setLanguage(lang);\n  }\n\n  const onOpenLogin = () => setShowLogin(true);\n  const onCloseLogin = () => setShowLogin(false);\n\n  if (language === 'fi' || language === 'en') {\n    return (\n      <Router>\n        <Container>\n          <Navigation lang={language}\n                      openLoginForm={onOpenLogin}\n                      onChangeLanguage={onChangeLanguage}\n                      router={Router.router} />\n          <Switch>\n            {routes.map(route => \n              <Route key={route.path} { ...route } />\n            )}\n          </Switch>\n\n          <Modal show={showLogin} onHide={onCloseLogin} />\n        </Container>\n      </Router>\n    )\n  } else {\n    return (\n      <LanguageSelection onChangeLanguage={onChangeLanguage}/>\n    );\n  }\n}\n\nexport default App;\n","/usr/src/app/src/components/LanguageSelection.js",[],"/usr/src/app/src/i18n.js",[],"/usr/src/app/src/components/Home.js",[],"/usr/src/app/src/components/Games.js",["89"],"import { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport axios from '../config/axiosConfig';\nimport Category from './Category';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport '../styles/Games.css';\n\nconst Games = (props) => {\n  const [ t, i18n ] = useTranslation();\n  const [ categoryList, setCategoryList ] = useState([]);\n\n  useEffect(() => {\n    axios.get('/categories/published')\n      .then((res) => {\n        setCategoryList(res.data);\n      })\n  }, [])\n\n  return (\n    <div className=\"categories\">\n      <Typography variant=\"h4\">\n        {t('games')}\n      </Typography>\n      <Grid container spacing={2}>\n        {categoryList.map(item =>\n          <Grid item xs={12} sm={6} md={4} key={item.id}>\n            <Category\n              title={item.title}\n              description={item.description}\n              alias={item.alias}\n              bgUrl={item.backgroundImageURL}\n            />\n          </Grid>          \n        )}\n      </Grid>      \n      <br />\n      <p>{t('toBeAdded')}</p>\n    </div>\n  );\n}\n\nexport default Games;","/usr/src/app/src/components/Category.js",["90"],"import { useTranslation } from 'react-i18next';\nimport Card from 'react-bootstrap/Card';\nimport LinkContainer from 'react-router-bootstrap/lib/LinkContainer';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\n\nimport placeholder from '../images/background/category_default.png';\n\nconst Category = (props) => {\n  const [ t, i18n ] = useTranslation();\n\n  return (\n    <Card border=\"dark\">\n      <Card.Img\n        src={props.bgUrl ? props.bgUrl : placeholder}\n      />\n      <Card.Body>\n        <Card.Title>{props.title[i18n.language]}</Card.Title>\n        <Card.Text>{props.description[i18n.language]}</Card.Text>\n      </Card.Body>\n      <ListGroup>\n        <ListGroupItem>\n          <LinkContainer to={`/play?category=${props.alias}`}>\n            <Card.Link>Play</Card.Link>\n          </LinkContainer>\n          <LinkContainer to={`/highscores?category=${props.alias}`}>\n            <Card.Link>High scores</Card.Link>\n          </LinkContainer>\n        </ListGroupItem>\n      </ListGroup>\n    </Card>\n    \n  )\n}\n\nexport default Category;","/usr/src/app/src/components/Navigation.js",[],"/usr/src/app/src/components/LoginForm.js",["91"],"import { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Alert from 'react-bootstrap/Alert';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport PersonIcon from '@material-ui/icons/Person';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\n\nconst LoginForm = (props) => {\n  const [ t, i18n ] = useTranslation();\n  const [ rememberMe, setRememberMe ] = useState(false);\n  const [ viewPassword, setViewPassword ] = useState(false);\n  const [ error, setError ] = useState(false);\n  const [ errorMsg, setErrorMsg ] = useState('');\n\n  const togglePasswordVisibility = () => {\n    setViewPassword(!viewPassword);\n  }\n\n  const onHandleLogin = () => {\n    setError(true);\n    setErrorMsg('Error?')\n  }\n\n  return (\n    <Form className=\"align-items-center\">\n      {error ? <Alert variant=\"danger\">{errorMsg}</Alert> : ''}\n      <Form.Group>\n        <Form.Label>{t('username')}</Form.Label>\n        <InputGroup>\n          <InputGroup.Prepend>\n            <InputGroup.Text>\n              <PersonIcon />\n            </InputGroup.Text>\n          </InputGroup.Prepend>\n          <Form.Control type=\"text\" placeholder={t('login.enterUsername')} />\n        </InputGroup>\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Label>{t('password')}</Form.Label>\n        <InputGroup>\n          <InputGroup.Prepend>\n            <InputGroup.Text className=\"form-password\"\n              onClick={togglePasswordVisibility}>\n              <Tooltip title={viewPassword ? t('login.hidePassword') : t('login.viewPassword')}>\n                {viewPassword ? <VisibilityOffIcon /> : <VisibilityIcon />}\n              </Tooltip>\n            </InputGroup.Text>\n          </InputGroup.Prepend>\n          <Form.Control type={viewPassword ? 'text' : 'password'}\n            placeholder={t('login.enterPassword')} />\n        </InputGroup>\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Check\n          type=\"checkbox\"\n          label={t('login.rememberMe')}\n          checked={rememberMe}\n          onChange={() => setRememberMe(!rememberMe)} />\n      </Form.Group>\n\n      <Button block className=\"mb-2\" onClick={onHandleLogin}>\n        {t('loginBtn')}\n      </Button>\n      <Grid container>\n        <Grid item xs>\n          <Typography variant=\"body2\">\n            <Link\n              className=\"form-link\"\n              variant=\"body2\"\n              onClick={() => props.setMode('forgot')}\n            >\n              {t('login.forgotPassword')}\n            </Link>\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"body2\">\n            {t('login.noAccount')}\n            <br />\n            <Link\n              className=\"form-link\"\n              variant=\"body2\"\n              onClick={() => props.setMode('register')}\n            >\n              {t('login.signUp')}\n            </Link>\n          </Typography>\n        </Grid>\n      </Grid>\n    </Form>\n  );\n}\n\nexport default LoginForm;","/usr/src/app/src/components/ModalForm.js",["92","93"],"import { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Modal from 'react-bootstrap/Modal';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nimport LoginForm from './LoginForm';\nimport RegisterForm from './RegisterForm';\n\nimport '../styles/ModalForm.css';\n\nconst Forgot = (props) => {\n  const [ t, i18n ] = useTranslation();\n  return (\n    <div>\n      <Typography>\n        {t('forgotPassword.info')}\n      </Typography>\n      <br />\n      <Typography variant=\"body2\">\n        <Link\n          className=\"form-link\"\n          variant=\"body2\"\n          onClick={() => props.setMode('login')}\n        >\n          {t('forgotPassword.back')}\n        </Link>\n      </Typography>\n    </div>\n  );\n}\n\nconst ModalForm = (props) => {\n  const [ t, i18n ] = useTranslation();\n  const [ mode, setMode ] = useState('login');\n\n  const onChangeForm = (view) => {\n    setMode(view);\n  }\n\n  return (\n    <Modal\n      show={props.show}\n      onHide={props.onHide}\n      centered\n      backdrop=\"static\"\n      restoreFocus={false}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>\n          { mode === 'login' ?\n            t('loginBox') :\n            mode === 'register'\n            ? t('signup.title')\n            : t('forgotPassword.title') }\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        { mode === 'login' ?\n          <LoginForm setMode={onChangeForm} /> :\n          mode === 'register' ?\n          <RegisterForm setMode={onChangeForm} /> :\n          <Forgot setMode={onChangeForm}/>\n        }\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default ModalForm;","/usr/src/app/src/components/RegisterForm.js",["94","95","96","97"],"import { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Alert from 'react-bootstrap/Alert';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst RegisterForm = (props) => {\n  const [ username, setUsername ] = useState('');\n  const [ usernameError, setUsernameError ] = useState('');\n  const [ email, setEmail ] = useState('');\n  const [ emailError, setEmailError ] = useState('');\n  const [ password, setPassword ] = useState('');\n  const [ passwordError, setPasswordError ] = useState('');\n  const [ showPassword, setShowPassword ] = useState(false);\n  const [ rePassword, setRePassword ] = useState('');\n  const [ rePasswordError, setRePasswordError ] = useState('');\n  const [ showRePassword, setShowRePassword ] = useState(false);\n  const [ error, setError ] = useState(false);\n  const [ errorMsg, setErrorMsg ] = useState('Error?');\n  const [ t, i18n ] = useTranslation();\n\n  const errorMessages = {\n    username: {\n      required: t('signup.usernameRequired'),\n      short: t('signup.usernameShort')\n    },\n    email: {\n      required: t('signup.emailRequired'),\n      validity: t('signup.emailValidity')\n    },\n    password: {\n      required: t('signup.passwordRequired'),\n      match: t('signup.passwordsNoMatch'),\n      short: t('signup.passwordShort')\n    }\n  };\n\n  const emailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n  const verifyInput = () => {\n    let verifyOk = true;\n\n    if (!username) {\n      verifyOk = false;\n      setUsernameError(errorMessages.username.required);\n    }\n    if (username && username.length < 3) {\n      verifyOk = false;\n      setUsernameError(errorMessages.username.short);\n    }\n    if (!email) {\n      verifyOk = false;\n      setEmailError(errorMessages.email.required);\n    }\n    if (email && !email.match(emailRegex)) {\n      verifyOk = false;\n      setEmailError(errorMessages.email.validity);\n    }\n    if (!password) {\n      verifyOk = false;\n      setPasswordError(errorMessages.password.required);\n    }\n    if (!rePassword) {\n      verifyOk = false;\n      setRePasswordError(errorMessages.password.required);\n    }\n    if (password && password.length < 6) {\n      verifyOk = false;\n      setPasswordError(errorMessages.password.short);\n    }\n    if (password && password.length >= 6 && password !== rePassword) {\n      verifyOk = false;\n      setPasswordError(errorMessages.password.match);\n    }\n    if (rePassword && rePassword.length < 6) {\n      verifyOk = false;\n      setRePasswordError(errorMessages.password.short);\n    }\n    if (rePassword && rePassword.length >= 6 && password !== rePassword) {\n      verifyOk = false;\n      setRePasswordError(errorMessages.password.match);\n    }\n    return verifyOk;\n  }\n\n  const onSubmit = () => {\n    const canSubmit = verifyInput();\n    if (canSubmit) {\n      console.log('sending')\n    } else setError(true)\n  }\n\n  return (\n    <Form>\n      {error ? <Alert variant=\"danger\">{errorMsg}</Alert> : ''}\n      <TextField\n        label={t('username')}\n        style={{ marginBottom: 10 }}\n        placeholder={t('signup.enterUsername')}\n        error={usernameError ? true : false}\n        fullWidth\n        margin=\"normal\"\n        helperText={usernameError}\n        InputLabelProps={{\n          shrink: true, required: true\n        }}\n        variant=\"outlined\"\n        onChange={(e) => {\n          if (e.target.value && usernameError) setUsernameError('')\n          setUsername(e.target.value)\n        }}\n      />\n      <TextField\n        label={t('email')}\n        style={{ marginBottom: 10 }}\n        placeholder=\"user@email.com\"\n        error={emailError ? true : false}\n        fullWidth\n        margin=\"normal\"\n        helperText={emailError}\n        InputLabelProps={{\n          shrink: true, required: true\n        }}\n        variant=\"outlined\"\n        onChange={(e) => {\n          if (e.target.value && emailError) setEmailError('')\n          setEmail(e.target.value)\n        }}\n      />\n      <TextField\n        label={t('password')}\n        type={showPassword ? 'text' : 'password'}\n        style={{ marginBottom: 10 }}\n        placeholder={t('signup.enterPassword')}\n        error={passwordError ? true : false}\n        fullWidth\n        margin=\"normal\"\n        helperText={passwordError}\n        InputLabelProps={{\n          shrink: true, required: true\n        }}\n        variant=\"outlined\"\n        onChange={(e) => {\n          if (e.target.value && passwordError) setPasswordError('')\n          if (rePasswordError === errorMessages.password.match) setRePasswordError('')\n          setPassword(e.target.value)\n        }}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n            <IconButton\n              aria-label=\"Toggle password visibility\"\n              onClick={() => setShowPassword(!showPassword)}\n              onMouseDown={(e) => e.preventDefault()}\n              edge=\"end\"\n            >\n              {showPassword ? <VisibilityOff /> : <Visibility />}\n            </IconButton>\n          </InputAdornment>\n          ),\n         }}\n      />\n      <TextField\n        label={t('rePassword')}\n        type={showRePassword ? 'text' : 'password'}\n        style={{ marginBottom: 20 }}\n        placeholder={t('signup.retypePassword')}\n        error={rePasswordError ? true : false}\n        fullWidth\n        margin=\"normal\"\n        helperText={rePasswordError}\n        InputLabelProps={{\n          shrink: true, required: true\n        }}\n        variant=\"outlined\"\n        onChange={(e) => {\n          if (e.target.value && rePasswordError) setRePasswordError('')\n          if (passwordError === errorMessages.password.match) setPasswordError('')\n          setRePassword(e.target.value)\n        }}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n            <IconButton\n              aria-label=\"Toggle password visibility\"\n              onClick={() => setShowRePassword(!showRePassword)}\n              onMouseDown={(e) => e.preventDefault()}\n              edge=\"end\"\n            >\n              {showRePassword ? <VisibilityOff /> : <Visibility />}\n            </IconButton>\n          </InputAdornment>\n          ),\n         }}\n      />\n      <Button block className=\"mb-3\" onClick={onSubmit}>\n        {t('signup.createAccount')}\n      </Button>\n      <Typography variant=\"body2\">\n        {t('signup.haveAccount')}\n        &nbsp;\n        <Link className=\"form-link\" variant=\"body2\" onClick={() => props.setMode('login')}>\n          {t('signup.login')}\n        </Link>\n      </Typography>\n    </Form>\n  );\n}\n\nexport default RegisterForm;","/usr/src/app/src/components/Play.js",["98","99"],"/usr/src/app/src/components/Game.js",[],"/usr/src/app/src/components/ProgressBar.js",[],"/usr/src/app/src/components/Recap.js",["100","101"],"import { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\n\nconst Recap = (props) => {\n  const { score, round, handleStart, endReason } = props;\n\n  const [ t, i18n ] = useTranslation();\n  const [ loading, setLoading ] = useState(true)\n\n  const tableColumns = [\n    { id: 'rank', label: 'Rank', minWidth: 40, maxWidth: 40, align: 'right' },\n    { id: 'user', label: 'User', minWidth: 100 },\n    {\n      id: 'score',\n      label: 'Score',\n      minwidth: 100,\n      align: 'right'\n    }\n  ]\n\n  useEffect(() => {\n    console.log('Haetaan highscoret...')\n    setLoading(false)\n  }, [])\n\n  const returnEndReason = () => {\n    if (endReason.wrongAnswer) return 'Vastasit väärin ja peli päättyi'\n    else if (endReason.finish) return 'Mahtavaa! Vastasit kaikkiin kysymyksiin oikein'\n    else if (endReason.userQuit) return 'Pelasit varman päälle ja lopetit kesken :)'\n    else return 'ZZzzZz.. nukahdit ja aika loppui kesken'\n  }\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <Typography variant=\"h4\">\n            Game Over\n          </Typography>\n        </Col>\n      </Row>\n      <Row xs={1} md={2}>\n        <Col>\n          <Row>\n            <Col>\n              <Typography>\n                {returnEndReason()}\n              </Typography>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Typography>\n                Pääsit kysymykseen {round}/10\n              </Typography>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Typography>\n                Sait {score} pistettä\n              </Typography>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Button variant=\"contained\" color=\"primary\" onClick={handleStart}>\n                {t('game.start')}\n              </Button>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Typography>\n                tai\n              </Typography>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Button variant=\"contained\" color=\"primary\" onClick={handleStart}>\n                Valitse toinen peli\n              </Button>\n            </Col>\n          </Row>\n        </Col>\n        <Col>\n          <Typography>TOP 10</Typography>\n          <TableContainer component={Paper}>\n            <Table stickyHeader>\n              <TableHead>\n                <TableRow>\n                  {tableColumns.map((column) => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth, maxWidth: column.maxWidth }}\n                    >\n                      {column.label}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <TableRow>\n                  <TableCell align=\"right\">\n                    1\n                  </TableCell>\n                  <TableCell>\n                    hakkis\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    3450\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default Recap;","/usr/src/app/src/components/NotFound.js",[],"/usr/src/app/src/config/axiosConfig.js",[],"/usr/src/app/src/config/routeConfig.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":18,"column":11,"nodeType":"108","messageId":"109","endLine":18,"endColumn":12},{"ruleId":"106","severity":1,"message":"110","line":11,"column":14,"nodeType":"108","messageId":"109","endLine":11,"endColumn":18},{"ruleId":"106","severity":1,"message":"107","line":10,"column":11,"nodeType":"108","messageId":"109","endLine":10,"endColumn":12},{"ruleId":"106","severity":1,"message":"110","line":16,"column":14,"nodeType":"108","messageId":"109","endLine":16,"endColumn":18},{"ruleId":"106","severity":1,"message":"110","line":13,"column":14,"nodeType":"108","messageId":"109","endLine":13,"endColumn":18},{"ruleId":"106","severity":1,"message":"110","line":34,"column":14,"nodeType":"108","messageId":"109","endLine":34,"endColumn":18},{"ruleId":"106","severity":1,"message":"111","line":26,"column":21,"nodeType":"108","messageId":"109","endLine":26,"endColumn":32},{"ruleId":"106","severity":1,"message":"110","line":27,"column":14,"nodeType":"108","messageId":"109","endLine":27,"endColumn":18},{"ruleId":"112","severity":1,"message":"113","line":45,"column":29,"nodeType":"114","messageId":"115","endLine":45,"endColumn":30,"suggestions":"116"},{"ruleId":"112","severity":1,"message":"113","line":45,"column":45,"nodeType":"114","messageId":"115","endLine":45,"endColumn":46,"suggestions":"117"},{"ruleId":"106","severity":1,"message":"110","line":39,"column":14,"nodeType":"108","messageId":"109","endLine":39,"endColumn":18},{"ruleId":"106","severity":1,"message":"118","line":40,"column":21,"nodeType":"108","messageId":"109","endLine":40,"endColumn":32},{"ruleId":"106","severity":1,"message":"110","line":19,"column":14,"nodeType":"108","messageId":"109","endLine":19,"endColumn":18},{"ruleId":"106","severity":1,"message":"119","line":20,"column":11,"nodeType":"108","messageId":"109","endLine":20,"endColumn":18},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'t' is assigned a value but never used.","Identifier","unusedVar","'i18n' is assigned a value but never used.","'setErrorMsg' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["122","123"],["124","125"],"'setCategory' is assigned a value but never used.","'loading' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"126","fix":"127","desc":"128"},{"messageId":"129","fix":"130","desc":"131"},{"messageId":"126","fix":"132","desc":"128"},{"messageId":"129","fix":"133","desc":"131"},"removeEscape",{"range":"134","text":"135"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"136","text":"137"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"138","text":"135"},{"range":"139","text":"137"},[1762,1763],"",[1762,1762],"\\",[1778,1779],[1778,1778]]